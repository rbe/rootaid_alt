#!/bin/bash

execdir="$(pushd `dirname $0` >/dev/null ; pwd ; popd >/dev/null)"
basedir="$(pushd ${execdir}/.. >/dev/null ; pwd ; popd >/dev/null)"
etcdir="${basedir}/etc"

. $(dirname $0)/libsh

create_user() {
    sudo addgroup --gid ${ROOTAID_GID} ${ROOTAID_USER}
    sudo adduser --uid ${ROOTAID_UID} --ingroup ${ROOTAID_USER} --home ${ROOTAID_HOME} --disabled-password --gecos "Rootaid" ${ROOTAID_USER}
}

clone_repo() {
    sudo apt-get -y install git
    ROOTAID_REPO_NAME='eu.artofcoding.rootaid'
    pushd ${ROOTAID_HOME} >/dev/null
    ssh-keygen -R bitbucket.org
    ssh-keyscan bitbucket.org >>${HOME}/.ssh/known_hosts
    git clone --depth 1 https://bitbucket.org/artofcoding/${ROOTAID_REPO_NAME}.git
    popd >/dev/null
}

setup_rootaid() {
    if [ $(id -u) -neq 0 ]
    then
        echo "$(basename $0) -s: Please execute this script as root"
        exit 1
    fi
    [ -f ${etcdir}/$0.conf ] && . ${etcdir}/$0.conf
    [ -f $0.conf ] && . $0.conf
    ROOTAID_UID=${ROOTAID_UID:-$(id -u)}
    ROOTAID_GID=${ROOTAID_GID:-$(id -g)}
    ROOTAID_USER=${ROOTAID_USER:-$(getent passwd ${ROOTAID_UID} | cut -d: -f1)}
    ROOTAID_HOME="${ROOTAID_HOME:-$(getent passwd ${ROOTAID_UID} | cut -d: -f6)}"

    apt-get -y install sudo
    cat >/etc/sudoers.d/rootaid <<EOF
${ROOTAID_USER} ALL=(ALL) ALL, NOPASSWD: ALL
EOF

    clone_repo
    echo "0 * * * * ( cd ${ROOTAID_REPO_NAME} ; ./bin/rootaid -u 2>update-rootaid.log 1>&2 )" | sudo crontab -u ${ROOTAID_USER} -

    sudo touch ${ROOTAID_HOME}/.bashrc
    sudo mkdir ${ROOTAID_HOME}/.ssh
    sudo touch ${ROOTAID_HOME}/.ssh/authorized_keys
    sudo mkdir ${ROOTAID_HOME}/apache
    sudo mkdir ${ROOTAID_HOME}/apache/conf
    sudo chown -R ${ROOTAID_USER}:${ROOTAID_USER} ${ROOTAID_HOME}
    sudo chmod -R go=u-w ${ROOTAID_HOME}
    sudo chmod -R go= ${ROOTAID_HOME}/.ssh
}

update_rootaid() {
    pushd ${basedir} >/dev/null
    git reset --hard
    git pull origin master --recurse-submodules
    popd >/dev/null
}

init_module() {
    local module=$1
    if [ -n "${module}" ]
    then
        local moduledir="${basedir}/modules/${module}"
        if [ -d "${moduledir}" ]
        then
            ${moduledir}/.init-module
        else
            echo "Cannot find ${moduledir}"
            exit 1
        fi
    else
        echo "No module given"
        echo "usage: $0 <module>"
        exit 1
    fi
}

init_rootaid() {
    user=$1
    home=$(getent passwd ${user} | cut -d: -f6)
    sudo cat >>${home}/.bashrc <<EOF
# Rootaid
PATH=${ROOTAID_HOME}/${ROOTAID_REPO_NAME}/bin:\$PATH
export PATH
EOF
}

while getopts ":i:su" opt
do
    case "$opt" in
        i)
            init-rootaid ${USER}
        ;;
        s)
            setup-rootaid
        ;;
        u)
            update_rootaid
        ;;
        \?)
            e "Invalid option: -${OPTARG}" >&2
            exit 1
        ;;
        :)
            e "Option -${OPTARG} requires an argument"
            exit 1
        ;;
    esac
done

exit 0
