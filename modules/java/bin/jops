#!/bin/bash
#
# Copyright (C) 2016-2017 art of coding UG, https://www.art-of-coding.eu
#

set -o nounset

execdir="$(pushd `dirname $0` >/dev/null ; pwd ; popd >/dev/null)"
moduledir="$(pushd ${execdir}/.. >/dev/null ; pwd ; popd >/dev/null)"
rootaid="$(pushd ${moduledir}/../.. >/dev/null ; pwd ; popd >/dev/null)"

. ${rootaid}/bin/libsh

#
# - Manage lifecycle of Java software
# undeployed -> deploying -> deployed
# deployed -> starting -> started
# started -> stopping -> stopped
# stopped -> undeploying -> undeployed
#

#
# jops
#

show_usage() {
    echo "Usage: $0 { start | stop | encrypt } [<path to jops.conf>]"
}

show_vars() {
    e ""
    e "Variables:"
    e "  JOPS_CONF=${JOPS_CONF}"
    e "  APP_NAME=${APP_NAME}"
    e "  APP_VERSION=${APP_VERSION}"
    e "  APP_HOME=${APP_HOME}"
    e "  APP_USER=${APP_USER}"
    e "  APP_ARTIFACT=${APP_ARTIFACT}"
    e "  JAVA_OPTS=${JAVA_OPTS}"
    e "  APP_OPTS=${APP_OPTS}"
    e "  APP_LOGFILE=${APP_LOGFILE}"
    e ""
}

MODE=$1

JOPS_CONF=$2
if [ -z "${JOPS_CONF}" ]
then
    JOPS_CONF="$(pwd)/jops.conf"
fi
if [ ! -f ${JOPS_CONF} ]
then
    echo "Cannot find or read ${JOPS_CONF}"
    exit 1
fi

. ${JOPS_CONF}
JOPS_CONF_DIR="$(pushd "`dirname ${JOPS_CONF}`" >/dev/null ; pwd ; popd >/dev/null)"

JOPS_EXECDIR="$(pushd "`dirname $0`" >/dev/null ; pwd ; popd >/dev/null)"
JOPS_BASEDIR="$(pushd "${JOPS_EXECDIR}/.." >/dev/null ; pwd ; popd >/dev/null)"
JOPS_SHAREDIR="${JOPS_BASEDIR}/share"

APP_HOME="$(dirname ${JOPS_CONF_DIR})"
APP_USER=${APP_USER:-$(getent passwd `id -u` | cut -d: -f1)}
APP_GROUP=${APP_GROUP:-$(getent group `id -g` | cut -d: -f1)}
APP_PROFILE=${APP_PROFILE:-production}
APP_PROFILE_PROPERTIES="$(pushd ${APP_HOME}/../../../../${APP_PROFILE}/conf >/dev/null ; pwd ; popd >/dev/null)"
# TODO APP_OPTS="--spring.config.location=classpath:/application.properties,${APP_PROFILE_PROPERTIES}/${APP_NAME}.properties"
APP_OPTS="--spring.config.location=${APP_PROFILE_PROPERTIES}/${APP_NAME}.properties"
APP_LOGDIR=${APP_LOGDIR:-/var/log}
APP_LOGFILE="${APP_LOGDIR}/${APP_NAME}-${APP_VERSION}.log"

VERBOSE=

create_systemd() {
    local t=jops@.systemd.template.$$
    cat ${JOPS_SHAREDIR}/init/jops@.systemd.template \
        | sed "s#DESCRIPTION#${appname}#" \
        | sed "s#SYSLOGIDENTIFIER#${appname}#" \
        | sed "s#USER#${APP_USER}#" \
        | sed "s#GROUP#${APP_GROUP}#" \
        | sed "s#WORKINGDIRECTORY#${basedir}#" \
        | sed "s#APPLOGFILE#${APP_LOGFILE}#" \
        | sed "s#APPPORT#808%i#" \ # 808%i
        | sed "s#APPHOME#${APP_HOME}#" \
        | sed "s#APPJAVAOPTS#${APP_JAVA_OPTS}#" \
        | sed "s#APPARTIFACT#${APP_ARTIFACT}#" \
        | sed "s#APPOPTS#${APP_OPTS}#" \
        > $t
    sudo mv $t /etc/systemd/system/${appname}@.service
    sudo systemctl daemon-reload
    sudo systemctl enable ${appname}@0
    sudo systemctl status ${appname}@0
}

create_upstart() {
    local t=jops.upstart.template.$$
    cat ${JOPS_SHAREDIR}/init/jops.upstart.template \
        | sed "s###" \
        > $t
    sudo mv $t /etc/init/${appname}
    sudo initctl reload-configuration
}

start_app() {
    e "Starting ${APP_NAME}..."
    [ -n "${VERBOSE}" ] && show_vars
    sudo touch ${APP_LOGFILE}
    sudo chown ${APP_USER}:${APP_GROUP} ${APP_LOGFILE}
    logredir="2>>${APP_LOGFILE} 1>&2"
    export APP_HOME
    sudo -E -u ${APP_USER} sh -c "cd ${APP_HOME} ; java ${APP_JAVA_OPTS} -jar ${APP_ARTIFACT} ${APP_OPTS} ${logredir} &"
}

stop_app() {
    e "Stopping ${APP_NAME}..."
    [ -n "${VERBOSE}" ] && show_vars
    pid=$(ps ax | grep ${APP_NAME} | grep ${APP_PROFILE} | grep java | grep -v grep | awk '{print $1}')
    if [ -z "${pid}" ]
    then
        e "Cannot find process id for ${APP_NAME}."
    elif [ -n "${pid}" ]
    then
        kill ${pid}
        e "stopped."
    else
        e "no pid."
    fi
}

encrypt_configuration() {
    e "*"
    e "* WARNING"
    e "*"
    e "* YOU ARE ABOUT TO CHANGE ENCRYPTION OF CONFIGURATION VALUES."
    e "* THIS MAY BREAK EXISTING PREVIOUSLY ENCRYPTED VALUES AND MAY HARM YOUR SYSTEM."
    e "*"
    e "* PROCEED ONLY IF YOU ARE SURE ABOUT WHAT YOU'RE DOING!"
    e "*"
    read -p "* Go ahead (y/n)?" goahead
    if [ "${goahead}" = "y" ]
    then
        declare -A pvalue
        encrypted_properties=$(grep ENC ${APP_HOME}/conf/${APP_NAME}.properties)
        for ep in ${encrypted_properties}
        do
            pname=${ep%=*}
            read -p "Enter value for ${pname}: " ${pvalue[pname]}
        done
        for k in ${!pvalue[@]}
        do
            pushd ${APP_HOME}/lib >/dev/null
            jasypt="java -jar camel-jasypt-${version.org.apache.camel}.jar"
            jasyptopt="-c encrypt -p ${ENCRYPTION_PASSWORD} -a ${ENCRYPTION_ALGORITHM}"
            encrypted_value=$(${jasypt} ${jasyptopt} -i ${pvalue[$k]})
            echo "${k}=ENC(${encrypted_value})"
            popd >/dev/null
        done
    fi
}

case "${MODE}" in
    start)
        start_app
    ;;
    stop)
        stop_app
    ;;
    encrypt)
        encrypt_configuration
    ;;
    *)
        show_usage
        exit 1
    ;;
esac

exit 0
